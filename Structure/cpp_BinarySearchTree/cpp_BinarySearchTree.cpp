/*
이진트리가 되기 위한 조건
1. 같은 값을 갖는 노드가 없어야 한다.
2. 왼쪽 서브트리에 있는 값은 현재 노드의 값보다 작고, 오른쪽 서브트리에 값은 현재 노드의 값보다 커야한다.
3. 서브트리도 이진트리여야 한다.

원소의 탐색, 추가, 삭제

- 탐색
  1) 탐색하려는 키 값이 루트 노드의 키값과 같은지 비교한다.

  2) 탐색하려는 키 값이 루트노드보다 키값이 작으면 왼쪽 서브트리로 이동한다.
     해당 서브트리에서 1을 행한다.

  3) 탐색하려는 키 값이 루트노드의 키값보다 크면 오른쪽 서브트리로
     이동하여 해당 서브트리에서 1을 행한다.

- 추가
    1) 탐색하려는 키 값이 이진탐색 트리에 존재하는지 탐색한다.
    2) 존재한다면 추가작업을 그만둔다.
    3) 존재하지 않는다면 탐색 실패가 발생한 현재위치에 원소를 추가한다.

-삭제
    1)삭제할 노드가 단말노드인 경우(차수 0)
        탐색하여 해당 노드를 찾는다
        해당노드를 삭제한다.
        해당 노드의 부모노드 링크를 null로 설정한다.

    2)삭제할 노드가 자식노드를 한 개 가진 경우(차수1)
        탐색하여 해당 노드를 찾는다.
        해당노드를 삭제한다.
        해당 노드의 자식노드를 해당 노드의 부모 노드의 링크에 연결한다.
    3)삭제할 노드가 자식노드를 두 개 가진 경우(차수2)
        해당 노드 삭제 후 해당노드의 부모노드와 링크될 자식노드를 선택해야 한다.
        삭제할 노드의 왼쪽 서브트리에서 가장 큰 자손 노드 또는 삭제할 오른쪽 서브트리에서 가장 작은 자손 노드를 선택하면된다.
*/
#include <iostream>

int main()
{
    std::cout << "Hello World!\n";
}

